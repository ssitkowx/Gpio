#pragma once

///////////////////////////////////////////////////////////////////////////////
//////////////////////////////// INCLUDES /////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

#include <stdint.h>
#include <stdbool.h>

///////////////////////////////////////////////////////////////////////////////
/////////////////////////// CLASSES/STRUCTURES ////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

template <class DERIVED_TYPE>
class Gpio
{
    friend DERIVED_TYPE;
    DERIVED_TYPE & derivedType = static_cast <DERIVED_TYPE &> (*this);

    public:
        enum class EGpio : uint8_t
        {
            A,
            B,
            C,
            D
        };

        Gpio () = default;

        void SetBank      (const EGpio vGpio)                                         { derivedType.SetBank             (vGpio);               }
        bool ReadPinLevel (const EGpio vGpio, const uint16_t vNum)                    { return derivedType.ReadPinLevel (vGpio, vNum);         }
        void SetPinLevel  (const EGpio vGpio, const uint16_t vNum, const bool vState) { derivedType.SetPinLevel         (vGpio, vNum, vState); }

    private:
        ~Gpio () = default;
};

///////////////////////////////////////////////////////////////////////////////
/////////////////////////////// END OF FILE ///////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
